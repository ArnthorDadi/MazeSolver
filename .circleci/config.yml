# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks. 
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1

executors:
  docker-environment:
    environment:
      IMAGE_NAME: arnthordadi/mazesolver
    docker:
      - image: circleci/buildpack-deps:stretch
  npm_executor:
    parameters:
      tag:
        type: string
        default: "8-stretch"
    docker:
      - image: cimg/base:stable

jobs:
  test:
    docker:
      - image: circleci/node:12.9.1-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-
      - run: npm install
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.npm 
            - ~/.cache
      - run:
          name: Run tests
          command: npm test
  build:
    executor: docker-environment
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:$CIRCLE_SHA1 . 
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish:
    executor: docker-environment
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin 
            docker push $IMAGE_NAME:$CIRCLE_SHA1

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  build_publish_deploy:
    jobs:
      - test
      - build:
          filters:
            branches:
              only:
                - main
      - publish:
          filters:
            branches:
              only:
                - main
          requires:
            - test
            - build